{"ast":null,"code":"var _jsxFileName = \"/home/vinayak/Documents/Spotify-clone/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\"; //resposible for interactinn btw spotify and react app\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  //states :- short term memory storage\n  // const [token, setToken] = useState(null);\n  const [{\n    token\n  }, dispatch] = useStateValue(); //runs code based on given condition\n  //to keep an eye on that window\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token); // setToken(_token);\n      //given access token to spotify\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n      s.getMyTopArtists().then(response => dispatch({\n        type: \"SET_TOP_ARTISTS\",\n        top_artists: response\n      }));\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s\n      });\n      s.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      s.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, !token && /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }), token && /*#__PURE__*/React.createElement(Player, {\n    spotify: s,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vinayak/Documents/Spotify-clone/src/App.js"],"names":["React","useEffect","SpotifyWebApi","useStateValue","Player","getTokenFromResponse","Login","s","App","token","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getPlaylist","then","response","discover_weekly","getMyTopArtists","top_artists","spotify","getMe","user","getUserPlaylists","playlists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,MAAMC,CAAC,GAAG,IAAIL,aAAJ,EAAV;;AAEA,SAASM,GAAT,GAAe;AACX;AACF;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBP,aAAa,EAA3C,CAHa,CAIb;AACA;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,IAAI,GAAGN,oBAAoB,EAAjC;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,QAAIG,MAAM,GAAGH,IAAI,CAACI,YAAlB;;AAEA,QAAID,MAAJ,EAAY;AACVP,MAAAA,CAAC,CAACS,cAAF,CAAiBF,MAAjB,EADU,CACiB;AAChC;;AACKJ,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,WADC;AAEPR,QAAAA,KAAK,EAAEK;AAFA,OAAD,CAAR;AAKAP,MAAAA,CAAC,CAACW,WAAF,CAAc,wBAAd,EAAwCC,IAAxC,CAA8CC,QAAD,IAC3CV,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,qBADC;AAEPI,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAOAb,MAAAA,CAAC,CAACe,eAAF,GAAoBH,IAApB,CAA0BC,QAAD,IACvBV,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,iBADC;AAEPM,QAAAA,WAAW,EAAEH;AAFN,OAAD,CADV;AAOAV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,aADC;AAEPO,QAAAA,OAAO,EAAEjB;AAFF,OAAD,CAAR;AAKAA,MAAAA,CAAC,CAACkB,KAAF,GAAUN,IAAV,CAAgBO,IAAD,IAAU;AACvBhB,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,UADC;AAEPS,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAOAnB,MAAAA,CAAC,CAACoB,gBAAF,GAAqBR,IAArB,CAA2BS,SAAD,IAAe;AACvClB,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,eADC;AAEPW,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMD;AACF,GA/CQ,EA+CN,CAACnB,KAAD,EAAQC,QAAR,CA/CM,CAAT;AAiDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,KAAD,iBAAU,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,EAEGA,KAAK,iBAAI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,CADF;AAMD;;AAED,eAAeC,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n//resposible for interactinn btw spotify and react app\nconst s = new SpotifyWebApi();\n\nfunction App() {\n    //states :- short term memory storage\n  // const [token, setToken] = useState(null);\n  const [{ token }, dispatch] = useStateValue();\n  //runs code based on given condition\n  //to keep an eye on that window\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);  // setToken(_token);\n //given access token to spotify\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}